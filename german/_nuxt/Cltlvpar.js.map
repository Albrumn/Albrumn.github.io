{"version":3,"file":"Cltlvpar.js","sources":["../../../../node_modules/vuetify/lib/components/VSheet/VSheet.mjs","../../../../components/ActText/Message.vue","../../../../components/ActText/Practice/Layout.vue","../../../../pages/index.vue"],"sourcesContent":["import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VSheet.css\";\n\n// Composables\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVSheetProps = propsFactory({\n  color: String,\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps()\n}, 'VSheet');\nexport const VSheet = genericComponent()({\n  name: 'VSheet',\n  props: makeVSheetProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-sheet', themeClasses.value, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, props.class],\n      \"style\": [backgroundColorStyles.value, dimensionStyles.value, locationStyles.value, props.style]\n    }, slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VSheet.mjs.map","<script setup lang=\"ts\">\r\nconsole.log('asdf')\r\n    const props = defineProps({\r\n        cpu: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        message: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    /* Private variables */\r\n    const _isLoading = ref<boolean>(true);\r\n    const _isMounted = ref<boolean>(false);\r\n\r\n    const m = ref<any>(props.message);\r\n\r\n    function personalize(str: string): string {\r\n        return str.replace('cpu_0', props.cpu[0].name).replace('user_name', 'Cory');\r\n    }\r\n\r\n    function isUser(str: string): boolean {\r\n        return str === 'user_name';\r\n    }\r\n\r\n    function init(): void {\r\n        setTimeout(() => {\r\n            _isMounted.value = true;\r\n        }, 1);\r\n        if (isUser(m.value.from)) {\r\n            _isLoading.value = false;\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            _isLoading.value = false;\r\n        }, 1000);\r\n    }\r\n\r\n    init();\r\n</script>\r\n\r\n<template>\r\n        <v-expand-transition class=\"w-100\">\r\n            <div v-show=\"_isMounted\">\r\n    <v-row no-gutters\r\n        class=\"ga-3 ma-3 mt-0\"\r\n        :class=\"`${isUser(m.from) ? 'justify-end' : 'justify-start'}`\">\r\n                <div style=\"max-width: 75%; position: relative;\">\r\n                    <div\r\n                        style=\"border: 16px solid transparent; position: absolute;\"\r\n                        :style=\"isUser(m.from) ? 'border-bottom: 16px solid rgb(var(--v-theme-secondary)); right: -16px; bottom: 0;' : 'border-top: 16px solid rgb(var(--v-theme-primary)); left: -16px; top: 0;'\"></div>                        \r\n                    <v-sheet\r\n                        class=\"px-3 py-1 rounded-lg\"\r\n                        :class=\"isUser(m.from) ? 'rounded-be-0' : 'rounded-ts-0'\"\r\n                        :color=\"isUser(m.from) ? 'secondary' : 'primary'\"\r\n                        elevation=\"8\">\r\n                        <v-expand-transition>\r\n                            <div v-show=\"!_isLoading\">\r\n                                <span>\r\n                                    {{ personalize(m.text) }}\r\n                                </span>\r\n                            </div>\r\n                        </v-expand-transition>\r\n                        <v-expand-transition>\r\n                            <div v-show=\"_isLoading\">\r\n                                <span\r\n                                    class=\"d-flex justify-center align-center\">\r\n                                    &nbsp;\r\n                                    <v-progress-circular\r\n                                        indeterminate\r\n                                        size=\"16\"\r\n                                        width=\"2\" />\r\n                                    &nbsp;\r\n                                </span>\r\n                            </div>\r\n                        </v-expand-transition>\r\n                    </v-sheet>\r\n                </div>\r\n    </v-row>\r\n            </div>\r\n        </v-expand-transition>\r\n</template>","<script setup lang=\"ts\">\r\n    import data from '~/data/text_message/practice/colors.json';\r\n    import { useGoTo } from 'vuetify';\r\n\r\n\r\n    const goTo = useGoTo();\r\n\r\n    /* Private variables */\r\n    const messages = ref<Array<any>>([]);\r\n    const _data = ref<any>({});\r\n    const _mode = ref<number>(0);\r\n    const _isOver = ref<boolean>(false);\r\n    const _question = ref<any>({});\r\n    const _questionCnt = ref<number>(data.questions.length);\r\n    const _correctCnt = ref<number>(0);\r\n    const _options = ref<Array<any>>([]);\r\n    \r\n    const t = ref<boolean>(false);\r\n    const _isInputMode = computed(() => _mode.value === 1);\r\n\r\n    /* UI references */\r\n    const chatArea = ref<HTMLElement>();\r\n\r\n    \r\n    function copyData(obj: any): any {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    function start(): void {\r\n        _isOver.value = false\r\n        t.value = true;\r\n        messages.value = [];\r\n        _data.value = copyData(data);\r\n        _data.value.questions = shuffle(_data.value.questions);\r\n        _questionCnt.value = _data.value.questions.length;\r\n        nextMessage(250);\r\n    }\r\n\r\n    function nextMessage(delay: number = 1250): void {\r\n        _mode.value = 0;\r\n        setTimeout(() => {\r\n            if (!chatArea.value) return;\r\n\r\n            if (_data.value.opening.messages.length > 0) {\r\n                messages.value.push(_data.value.opening.messages.shift());\r\n            }\r\n            else if (_data.value.questions.length > 0) {\r\n                _question.value = _data.value.questions.shift();\r\n                if (_data.value.fillers) _question.value.text = _data.value.fillers[Math.floor(Math.random() * _data.value.fillers.length)].replace('FILLER', _question.value.text);\r\n                messages.value.push(_question.value);\r\n                setTimeout(() => {\r\n                    inputMode();\r\n                }, 1000);\r\n                scroll();\r\n                return;\r\n            }\r\n            else if (_data.value.closing.messages.length > 0) {\r\n                const closingMsg = _data.value.closing.messages.shift()\r\n                closingMsg.text = closingMsg?.text.replace('CORRECT_CNT', _correctCnt.value.toString()).replace('TOTAL_CNT', _questionCnt.value.toString())\r\n                messages.value.push(closingMsg);\r\n            }\r\n            else {\r\n                _isOver.value = true;\r\n                return;\r\n            }\r\n            scroll();\r\n            nextMessage();\r\n        }, delay);\r\n    }\r\n\r\n    function inputMode(): void {\r\n        let allOptions = [ ..._question.value.options ];\r\n        _options.value = allOptions.splice(_question.value.answer, 1);\r\n\r\n        allOptions = shuffle(allOptions)\r\n        _options.value = shuffle(_options.value.concat(allOptions.splice(0, 3)));\r\n\r\n        _mode.value = 1;\r\n    }\r\n\r\n    function scroll(): void {\r\n        console.log(`scroll to msg-${messages.value.length - 1}`)\r\n        setTimeout(() => {\r\n            goTo(10000000, { container: '#chatArea'})\r\n            //window.scrollTo({ left: 0, top: document.documentElement.scrollHeight, behavior: 'smooth' })\r\n        }, 1);\r\n    }\r\n\r\n    function selectOption(index: number): void {\r\n        _mode.value = 0;\r\n        messages.value.push({ from: 'user_name', text: _options.value[index] });\r\n        scroll();\r\n        setTimeout(() => {\r\n            checkAnswer(_options.value[index]);\r\n        }, 250);\r\n    }\r\n\r\n    function checkAnswer(res: string): void {\r\n        let allOptions = [ ..._question.value.options ];\r\n        const isCorrect = allOptions.indexOf(res) === _question.value.answer;\r\n        if (isCorrect && _question.value.response < 0) {\r\n            _correctCnt.value++;\r\n        }\r\n        _question.value.response = 2;\r\n        const resPool = isCorrect ? data.responses.correct : data.responses.incorrect;\r\n        messages.value.push({ from: 'cpu_0', text: resPool[Math.floor(Math.random() * resPool.length)] });\r\n        scroll();\r\n        setTimeout(() => {\r\n            if (isCorrect) {\r\n                nextMessage();\r\n            }\r\n            else {\r\n                messages.value.push(_question.value);\r\n                setTimeout(() => {\r\n                    inputMode();\r\n                }, 1000);\r\n                scroll();\r\n            }\r\n        }, 1500)\r\n    }\r\n\r\n    function shuffle(arr: Array<any>): Array<any> {\r\n        //return arr.sort((a, b) => a.title > b.title);\r\n        let index = arr.length;\r\n        while (index != 0) {\r\n            let randomIndex = Math.floor(Math.random() * index);\r\n            index--;\r\n            [arr[index], arr[randomIndex]] = [arr[randomIndex], arr[index]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function close(): void {\r\n        t.value = false;\r\n    }\r\n\r\n    defineExpose({\r\n        start\r\n    });\r\n</script>\r\n\r\n<template>\r\n    <v-dialog fullscreen v-model=\"t\"\r\n          transition=\"dialog-bottom-transition\">\r\n        <template v-slot:default=\"{ isActive }\">\r\n            <v-card v-bind=\"isActive\"\r\n                color=\"white\">\r\n                <v-toolbar\r\n                    class=\"px-3\"\r\n                    elevation=\"8\">\r\n                    <template #prepend>\r\n                        <v-avatar\r\n                            class=\"ml-0 mr-3\">\r\n                            <v-img\r\n                                :alt=\"_data.cpu[0].name\"\r\n                                color=\"primary-lighten-3\"\r\n                                src=\"./cpu_0.png\" />\r\n                        </v-avatar>\r\n                    </template>\r\n                    <p>{{ _data.cpu[0].name }}</p>\r\n                    <v-spacer />\r\n                    <p>{{ _data.title }}</p>\r\n                </v-toolbar>\r\n                <div\r\n                    class=\"w-100\"\r\n                    style=\"flex-grow: 1; overflow-y: auto; position: relative; justify-content: center; display:flex;\">\r\n                    <v-container ref=\"chatArea\"\r\n                        id=\"chatArea\"\r\n                        class=\"mx-auto py-3\"\r\n                        max-width=\"800\"\r\n                        style=\"position: absolute; bottom: 0;'\">\r\n                        <ActTextMessage v-for=\"(m, i) in messages\" :key=\"i\"\r\n                            :id=\"`msg-${i}`\"\r\n                            :cpu=\"_data.cpu\" :message=\"{ ...m }\" />\r\n                            <v-expand-transition>\r\n                                <div v-show=\"_isOver\">\r\n                                    <v-row no-gutters class=\"justify-center mb-16\">\r\n                                        <v-btn @click=\"close\">Close</v-btn>\r\n                                    </v-row>\r\n                                </div>\r\n                            </v-expand-transition>\r\n                    </v-container>\r\n                </div>\r\n                <v-expand-transition>\r\n                    <div v-show=\"_isInputMode\">\r\n                        <v-sheet class=\"pa-1\">\r\n                            <v-row v-for=\"(o, i) in _options\" :key=\"i\"\r\n                                no-gutters\r\n                                class=\"mb-2\">\r\n                                <v-btn\r\n                                    class=\"w-100 py-3\"\r\n                                    color=\"secondary\"\r\n                                    height=\"fit-content\"\r\n                                    @click=\"selectOption(i)\">\r\n                                    {{ o }}\r\n                                </v-btn>\r\n                            </v-row>\r\n                        </v-sheet>\r\n                    </div>\r\n                </v-expand-transition>\r\n            </v-card>\r\n        </template>\r\n    </v-dialog>\r\n</template>","<script setup lang=\"ts\">\r\n    definePageMeta({\r\n        layout: 'no-nav',\r\n        middleware: ['auth']\r\n    });\r\n\r\n    /* UI references */\r\n    const actTextPractice = ref<HTMLElement>();\r\n\r\n    function openTextPractice(): void {\r\n        if (!actTextPractice.value) return;\r\n\r\n        const dialog = <any>actTextPractice.value;\r\n        dialog.start();\r\n    }\r\n</script>\r\n\r\n<template>\r\n    <div class=\"d-flex justify-center align-center mt-16\">\r\n        <v-btn @click=\"openTextPractice\">Text Message Practice: Colors</v-btn>\r\n        <ActTextPracticeLayout ref=\"actTextPractice\" />\r\n    </div>\r\n</template>"],"names":["makeVSheetProps","propsFactory","makeBorderProps","makeComponentProps","makeDimensionProps","makeElevationProps","makeLocationProps","makePositionProps","makeRoundedProps","makeTagProps","makeThemeProps","VSheet","genericComponent","props","_ref","slots","themeClasses","provideTheme","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","borderClasses","useBorder","dimensionStyles","useDimension","elevationClasses","useElevation","locationStyles","useLocation","positionClasses","usePosition","roundedClasses","useRounded","useRender","_createVNode","__props","_isLoading","ref","_isMounted","m","personalize","str","isUser","init","goTo","useGoTo","messages","_data","_mode","_isOver","_question","_questionCnt","data","_correctCnt","_options","t","_isInputMode","computed","chatArea","copyData","obj","start","shuffle","nextMessage","delay","inputMode","scroll","closingMsg","allOptions","selectOption","index","checkAnswer","res","isCorrect","resPool","arr","randomIndex","close","__expose","actTextPractice","openTextPractice"],"mappings":"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","x_google_ignoreList":[0]}