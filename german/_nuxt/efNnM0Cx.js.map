{"version":3,"file":"efNnM0Cx.js","sources":["../../../../middleware/auth.ts"],"sourcesContent":["import { useAuthStore } from \"#imports\";\r\nimport { usePageStore } from \"#imports\";\r\nimport { storeToRefs } from 'pinia';\r\n\r\nconst authStore = useAuthStore();\r\nconst { isLoggedIn, profile } = storeToRefs(authStore);\r\nconst { fetchLinkCodes, fetchProfile, loadSession, resetStores } = authStore;\r\nconst { changesExist, isForceNav, isWarningShown, prevRoute, tempNavTo } = storeToRefs(usePageStore());\r\n\r\nexport default defineNuxtRouteMiddleware(async (to, from) => {\r\n    return;\r\n    const errorMsg = await loadSession();\r\n    if (errorMsg === '') {\r\n        await fetchProfile();\r\n        await fetchLinkCodes(profile.value.account_id);\r\n    }\r\n\r\n    if (to?.name !== \"login\") {\r\n        prevRoute.value = to.path;\r\n    }\r\n\r\n    if (!isLoggedIn.value && to?.name?.toString() !== 'login' && to?.name?.toString() !== 'index') {\r\n        abortNavigation();\r\n        await resetStores();\r\n        return navigateTo('/');\r\n    }\r\n    else if (isLoggedIn.value\r\n        && (to?.name?.toString() === 'index' || to?.name?.toString() === 'login' || to?.name?.toString() === 'createaccount' || to?.name?.toString() === 'recover')) {\r\n        abortNavigation();\r\n        return navigateTo('/account');\r\n    }\r\n \r\n    if (changesExist.value && !isForceNav.value) {\r\n        isWarningShown.value = true;\r\n        tempNavTo.value = to;\r\n        return abortNavigation();\r\n    }\r\n    else {\r\n        changesExist.value = false;\r\n        isForceNav.value = false;\r\n        isWarningShown.value = false;\r\n        tempNavTo.value = null;\r\n        if (to.name === 'login') {\r\n            resetStores();\r\n        }\r\n    }\r\n});"],"names":["authStore","useAuthStore","isLoggedIn","profile","storeToRefs","fetchLinkCodes","fetchProfile","loadSession","changesExist","isForceNav","isWarningShown","prevRoute","tempNavTo","usePageStore","auth","defineNuxtRouteMiddleware","to","from"],"mappings":"8GAKA,MAAMA,EAAEC,EAAwB,EAC1B,CAAE,WAAAC,EAAA,QAAAC,GAA8BC,EAAAJ,GAChC,CAAE,eAAAK,EAA0B,aAAAC,EAAA,YAAAC,eAAqC,EAAAP,EAExD,CAAA,aAAAQ,EAAA,WAAAC,EAAA,eAAAC,EAAiC,UAAAC,EAAa,UAAAC,GAAAR,EAAAS,GAAA,EACzDC,EAAAC,EAAA,MAAAC,EAAAC,IAAA"}